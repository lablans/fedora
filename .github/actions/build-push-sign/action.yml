name: Build, push, and sign container target
description: Reusable step that builds a target, pushes it, and signs the resulting digest.
inputs:
  image_name:
    description: Container image name (repository)
    required: true
  registry_path:
    description: Full registry path (e.g. ghcr.io/OWNER)
    required: true
  # tags:
  #   description: Space-separated tags (without SHA)
  #   required: true
  target:
    description: Build target
    required: true
  upstream_image:
    description: Upstream image to use as a build-arg
    required: true
runs:
  using: "composite"
  steps:
    - name: Pull base image
      id: pull_base
      shell: bash
      run: |
        sudo podman pull ${{ inputs.upstream_image }}

    - name: Define tags
      id: set_tags
      shell: bash
      run: |
        set -x
        version=$(sudo podman image inspect ${{ inputs.upstream_image }} \
          --format '{{ index .Config.Labels "org.opencontainers.image.version" }}')
        LONG_TAG="${{ inputs.target }}-${{ github.ref_name }}-${version}"
        SHORT_TAG="$(echo ${LONG_TAG} | sed 's:\..*::')"
        BRANCH_TAG="${{ inputs.target }}-${{ github.ref_name }}"
        ALL_TAGS="${{ inputs.target }}-${{ github.sha }} $BRANCH_TAG $LONG_TAG $SHORT_TAG"
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "LONG_TAG=$LONG_TAG" >> $GITHUB_ENV
        echo "SHORT_TAG=$SHORT_TAG" >> $GITHUB_ENV
        echo "BRANCH_TAG=$BRANCH_TAG" >> $GITHUB_ENV
        echo "ALL_TAGS=$ALL_TAGS" >> $GITHUB_ENV
        echo "ALL_IMAGE_NAMES_WITH_TAGS=$(echo $ALL_TAGS | sed -e 's;\S\+;${{ inputs.registry_path }}/${{ inputs.image_name }}:&;g')" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Build image
      id: build_image
      shell: bash
      run: |
        sudo \
          buildah bud \
          --file Containerfile \
          --format docker \
          --tag ${{ inputs.image_name }}:$BRANCH_TAG \
          --build-arg UPSTREAM_IMAGE=${{ inputs.upstream_image }} \
          --target ${{ inputs.target }}
        echo "image-with-tag=${{ inputs.image_name }}:$BRANCH_TAG" >> "$GITHUB_OUTPUT"

    - name: Run Rechunker
      id: rechunk
      uses: hhd-dev/rechunk@master
      with:
        ref: "localhost/${{ steps.build_image.outputs.image-with-tag }}"
        prev-ref: "${{ inputs.registry_path }}/${{ steps.build_image.outputs.image-with-tag }}"
        version: ${{ env.VERSION }}

    - name: Load in podman and tag
      shell: bash
      run: |
        set -x
        IMAGE=$(sudo podman pull ${{ steps.rechunk.outputs.ref }})
        sudo rm -rf ${{ steps.rechunk.outputs.location }}

        sudo podman tag $IMAGE ${{ env.ALL_IMAGE_NAMES_WITH_TAGS }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3

    - name: Push to registry (${{ inputs.target }})
      id: push_image
      shell: bash
      run: |
        set -x

        for IMG in ${{ env.ALL_IMAGE_NAMES_WITH_TAGS }}; do
          sudo podman push --digestfile=/tmp/mydigest $IMG
        done
        echo "digest=$(sudo cat /tmp/mydigest)" >> "$GITHUB_OUTPUT"
        sudo rm /tmp/mydigest

    - name: Sign image (${{ inputs.target }})
      shell: bash
      env:
        COSIGN_PRIVATE_KEY: ${{ env.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ env.COSIGN_PASSWORD }}
      run: |
        set -x
        cosign sign -y --key env://COSIGN_PRIVATE_KEY \
          ${{ inputs.registry_path }}/${{ inputs.image_name }}@${{ steps.push_image.outputs.digest }}

    - name: Give overview about space consumption
      shell: bash
      run: |
        sudo find
        sudo podman images -a
        sudo du -sh *